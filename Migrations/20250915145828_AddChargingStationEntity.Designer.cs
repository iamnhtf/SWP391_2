// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestServer.Data;

#nullable disable

namespace TestServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250915145828_AddChargingStationEntity")]
    partial class AddChargingStationEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TestServer.Models.ChargingStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PowerOutputKW")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChargingStations");
                });

            modelBuilder.Entity("TestServer.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Car")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Car = "",
                            LicenseNumber = "",
                            Name = "Nguyễn Xuân Thịnh",
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 2,
                            Car = "",
                            LicenseNumber = "",
                            Name = "Nguyễn Hưng Thái",
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 3,
                            Car = "",
                            LicenseNumber = "",
                            Name = "Nguyễn Bùi Đăng Khôi",
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 4,
                            Car = "",
                            LicenseNumber = "",
                            Name = "Lê Minh Đức",
                            PhoneNumber = ""
                        },
                        new
                        {
                            Id = 5,
                            Car = "",
                            LicenseNumber = "",
                            Name = "Vũ Thế Anh",
                            PhoneNumber = ""
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
